{"version":3,"sources":["components/SeasonDisplay.js","components/Spinner.js","components/App.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","msg","defaultProps","App","state","errorMessage","renderContent","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8OAKMA,EAAe,CACnBC,OAAQ,CACNC,KAAM,0BACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,qBACNC,SAAU,cAyBCE,MAbf,SAAuBC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIE,MAAOC,aARlC,GAAKH,EAAQ,EACjBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIF,EAEDP,EAAaS,GAAhCP,EAFoB,EAEpBA,KAAMC,EAFc,EAEdA,SAEd,OACE,sBAAKS,UAAS,yBAAoBH,GAAlC,UACE,mBAAGG,UAAS,oBAAeT,EAAf,mBACZ,6BAAKD,IACL,mBAAGU,UAAS,qBAAgBT,EAAhB,uBC9BZU,EAAU,SAACP,GACf,OACE,qBAAKM,UAAU,mBAAf,SACE,qBAAKA,UAAU,qBAAf,SAAqCN,EAAMQ,SAIjDD,EAAQE,aAAe,CACrBD,IAAK,eAEQD,QC0BAG,E,4MAhCbC,MAAQ,CAAEV,IAAK,KAAMW,aAAc,I,EAQnCC,cAAgB,WACd,OAAI,EAAKF,MAAMV,MAAQ,EAAKU,MAAMC,aACzB,cAAC,EAAD,CAAeX,IAAK,EAAKU,MAAMV,OAEnC,EAAKU,MAAMV,KAAO,EAAKU,MAAMC,aAC1B,UAAN,OAAiB,EAAKD,MAAMC,cAG5B,8BACE,cAAC,EAAD,CAASJ,IAAI,uC,uDAfnB,WAAqB,IAAD,OAClBM,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAElB,IAAKiB,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEP,aAAcU,EAAIC,e,oBAiB/C,WACE,OAAO,8BAAMC,KAAKX,sB,GAxBJY,IAAMC,WCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.3b3eb7da.chunk.js","sourcesContent":["import '../SeasonDisplay.css';\nimport React from 'react';\n\n// configuration file\n\nconst seasonConfig = {\n  summer: {\n    text: \"Let's hit to the beach!\",\n    iconName: 'sun',\n  },\n  winter: {\n    text: \"Burr, it's chilly!\",\n    iconName: 'snowflake',\n  },\n};\n\nconst getSeason = (lat, month) => {\n  if (month >= 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n};\n<i class=\"snowflake icon\"></i>;\nfunction SeasonDisplay(props) {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const { text, iconName } = seasonConfig[season];\n\n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`icon-left ${iconName} icon massive`}></i>\n      <h1>{text}</h1>\n      <i className={`icon-right ${iconName} icon massive`}></i>\n    </div>\n  );\n}\n\nexport default SeasonDisplay;\n","import React from 'react';\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">{props.msg}</div>\n    </div>\n  );\n};\nSpinner.defaultProps = {\n  msg: 'Loading ...',\n};\nexport default Spinner;\n","import React from 'react';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n// import Clock from './Clock';\n\nclass App extends React.Component {\n  state = { lat: null, errorMessage: '' };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => this.setState({ lat: position.coords.latitude }),\n      (err) => this.setState({ errorMessage: err.message })\n    );\n  }\n  renderContent = () => {\n    if (this.state.lat && !this.state.errorMessage) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n    if (!this.state.lat && this.state.errorMessage) {\n      return `Error: ${this.state.errorMessage}`;\n    }\n    return (\n      <div>\n        <Spinner msg=\"Please accept location request!\" />\n      </div>\n    );\n  };\n\n  render() {\n    return <div>{this.renderContent()}</div>;\n    // return (\n    //   <div>\n    //     <Clock />\n    //   </div>\n    // );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}